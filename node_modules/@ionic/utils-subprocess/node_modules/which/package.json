{
  "_args": [
    [
      {
        "raw": "which@^2.0.1",
        "scope": null,
        "escapedName": "which",
        "name": "which",
        "rawSpec": "^2.0.1",
        "spec": ">=2.0.1 <3.0.0",
        "type": "range"
      },
      "/Users/macos/Documents/ionic/lionsd351/node_modules/@ionic/utils-subprocess/node_modules/cross-spawn"
    ]
  ],
  "_from": "which@^2.0.1",
  "_hasShrinkwrap": false,
  "_id": "which@2.0.1",
  "_location": "/@ionic/utils-subprocess/which",
  "_nodeVersion": "12.8.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/which_2.0.1_1570145217393_0.887774316286817"
  },
  "_npmUser": {
    "name": "isaacs",
    "email": "i@izs.me"
  },
  "_npmVersion": "6.12.0-next.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "which@^2.0.1",
    "scope": null,
    "escapedName": "which",
    "name": "which",
    "rawSpec": "^2.0.1",
    "spec": ">=2.0.1 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@ionic/utils-subprocess/cross-spawn"
  ],
  "_resolved": "https://registry.npmjs.org/which/-/which-2.0.1.tgz",
  "_shasum": "f1cf94d07a8e571b6ff006aeb91d0300c47ef0a4",
  "_shrinkwrap": null,
  "_spec": "which@^2.0.1",
  "_where": "/Users/macos/Documents/ionic/lionsd351/node_modules/@ionic/utils-subprocess/node_modules/cross-spawn",
  "author": {
    "name": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "http://blog.izs.me"
  },
  "bin": {
    "which": "./bin/which"
  },
  "bugs": {
    "url": "https://github.com/isaacs/node-which/issues"
  },
  "dependencies": {
    "isexe": "^2.0.0"
  },
  "description": "Like which(1) unix command. Find the first instance of an executable in the PATH.",
  "devDependencies": {
    "mkdirp": "^0.5.0",
    "rimraf": "^2.6.2",
    "tap": "^14.6.9"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-N7GBZOTswtB9lkQBZA4+zAXrjEIWAUOB93AvzUiudRzRxhUdLURQ7D/gAIMY1gatT/LTbmbcv8SiYazy3eYB7w==",
    "shasum": "f1cf94d07a8e571b6ff006aeb91d0300c47ef0a4",
    "tarball": "https://registry.npmjs.org/which/-/which-2.0.1.tgz",
    "fileCount": 6,
    "unpackedSize": 9901,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdloPBCRA9TVsSAnZWagAA+BgP/2GJw/9PrSO1HI/LWbZg\nYPT2jaP2bvrHSNYPSVlmHyM2KYXgf0ZbhMtCyXie7g0bbXvpUmA7x0iB4cGc\nuJsGmbOgxqZXWQdF/AqV2bp7VPl+8AB9E8GEWyY5b7Yu9V2h7QTtRz5I1rpH\neBGj8930V/KLSzo32qmWlrfwaoZfB/7LxxtLjRZPIHthBAIRV4e1Jxu9SD9Z\nYYMumdNuvheaxPSQ5vjWnycat8bdyshcqn98LtbdKtsvy3i360f03vPGDaiT\nFlJBMQVe5vA3eKhhcgJH+K6G0PwF6ih5x4OERDVYskPbjAJhM4+X+FpN2jJe\n4CHVXNE+accvMgEuLGc5KmkIn8Hlt9WMD440ISh+usvr1MrKorzdSD3L8UQu\nfc4XfHE6bQEbSOI20mgqgq6WqVlUVcUQPBOeiNseXoZwwr03cPUfbkRMfSyT\n/U5DEh4OIlSbRv4k9WeD4paKM1zJnPjOJRLf5b8iTKOEcxzzDUoQLNT9o5iI\nvl+mG815nYEBI57TTZpOnmfBtW4vv+ZaqYj6H8uaOQHfTV+Mka4WsB0lmYbJ\nbUWWCK1oG2AYIeLJQGNxpvoM85e9CRBtyXwW4MR2q6x6DdNjNn0bwgQSn+yV\nmKmQzjS4rTLE84WbDnH9+46fR76DRbt1DsORQ9WaIV2R0Hrh7c8VJ9ztnXA9\niHfR\r\n=90mr\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 8"
  },
  "files": [
    "which.js",
    "bin/which"
  ],
  "gitHead": "8ef60698398872699b5446a06fc579d281a94b91",
  "homepage": "https://github.com/isaacs/node-which#readme",
  "license": "ISC",
  "main": "which.js",
  "maintainers": [
    {
      "name": "isaacs",
      "email": "i@izs.me"
    }
  ],
  "name": "which",
  "optionalDependencies": {},
  "readme": "# which\n\nLike the unix `which` utility.\n\nFinds the first instance of a specified executable in the PATH\nenvironment variable.  Does not cache the results, so `hash -r` is not\nneeded when the PATH changes.\n\n## USAGE\n\n```javascript\nvar which = require('which')\n\n// async usage\nwhich('node', function (er, resolvedPath) {\n  // er is returned if no \"node\" is found on the PATH\n  // if it is found, then the absolute path to the exec is returned\n})\n\n// or promise\nwhich('node').then(resolvedPath => { ... }).catch(er => { ... not found ... })\n\n// sync usage\n// throws if not found\nvar resolved = which.sync('node')\n\n// if nothrow option is used, returns null if not found\nresolved = which.sync('node', {nothrow: true})\n\n// Pass options to override the PATH and PATHEXT environment vars.\nwhich('node', { path: someOtherPath }, function (er, resolved) {\n  if (er)\n    throw er\n  console.log('found at %j', resolved)\n})\n```\n\n## CLI USAGE\n\nSame as the BSD `which(1)` binary.\n\n```\nusage: which [-as] program ...\n```\n\n## OPTIONS\n\nYou may pass an options object as the second argument.\n\n- `path`: Use instead of the `PATH` environment variable.\n- `pathExt`: Use instead of the `PATHEXT` environment variable.\n- `all`: Return all matches, instead of just the first one.  Note that\n  this means the function returns an array of strings instead of a\n  single string.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/isaacs/node-which.git"
  },
  "scripts": {
    "changelog": "git add CHANGELOG.md",
    "postchangelog": "git commit -m 'update changelog - '${npm_package_version}",
    "postpublish": "git push origin --follow-tags",
    "postversion": "npm publish",
    "prechangelog": "bash gen-changelog.sh",
    "prepublish": "npm run changelog",
    "preversion": "npm test",
    "test": "tap"
  },
  "tap": {
    "check-coverage": true
  },
  "version": "2.0.1"
}
