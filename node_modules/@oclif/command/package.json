{
  "_args": [
    [
      {
        "raw": "@oclif/command@^1.5.6",
        "scope": "@oclif",
        "escapedName": "@oclif%2fcommand",
        "name": "@oclif/command",
        "rawSpec": "^1.5.6",
        "spec": ">=1.5.6 <2.0.0",
        "type": "range"
      },
      "/Users/macos/Documents/ionic/lionsd351/node_modules/ios-sim"
    ]
  ],
  "_from": "@oclif/command@^1.5.6",
  "_hasShrinkwrap": false,
  "_id": "@oclif/command@1.5.19",
  "_location": "/@oclif/command",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/command_1.5.19_1567722485556_0.9760031729368892"
  },
  "_npmUser": {
    "name": "rasphilco",
    "email": "philipe@heroku.com"
  },
  "_phantomChildren": {
    "@oclif/command": "1.5.19",
    "ansi-styles": "3.2.1",
    "chalk": "2.4.2",
    "is-fullwidth-code-point": "2.0.0",
    "lodash.template": "4.5.0",
    "string-width": "3.1.0",
    "widest-line": "2.0.1"
  },
  "_requested": {
    "raw": "@oclif/command@^1.5.6",
    "scope": "@oclif",
    "escapedName": "@oclif%2fcommand",
    "name": "@oclif/command",
    "rawSpec": "^1.5.6",
    "spec": ">=1.5.6 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@oclif/command/@oclif/plugin-help",
    "/@oclif/plugin-help",
    "/ios-sim"
  ],
  "_resolved": "https://registry.npmjs.org/@oclif/command/-/command-1.5.19.tgz",
  "_shasum": "13f472450eb83bd6c6871a164c03eadb5e1a07ed",
  "_shrinkwrap": null,
  "_spec": "@oclif/command@^1.5.6",
  "_where": "/Users/macos/Documents/ionic/lionsd351/node_modules/ios-sim",
  "author": {
    "name": "Jeff Dickey @jdxcode"
  },
  "bugs": {
    "url": "https://github.com/oclif/command/issues"
  },
  "dependencies": {
    "@oclif/config": "^1",
    "@oclif/errors": "^1.2.2",
    "@oclif/parser": "^3.8.3",
    "@oclif/plugin-help": "^2",
    "debug": "^4.1.1",
    "semver": "^5.6.0"
  },
  "description": "oclif base command",
  "devDependencies": {
    "@oclif/plugin-plugins": "^1.7.7",
    "@oclif/tslint": "^3.1.1",
    "@types/chai": "^4.1.7",
    "@types/mocha": "^5.2.6",
    "@types/node": "^10.12.24",
    "@types/semver": "^5.5.0",
    "chai": "^4.2.0",
    "cli-ux": "^5.1.0",
    "conventional-changelog-cli": "^2.0.12",
    "fancy-test": "^1.4.3",
    "globby": "^9.0.0",
    "mocha": "^6.0.2",
    "ts-node": "^8.0.3",
    "tslint": "^5.14.0",
    "typescript": "^3.3.3333"
  },
  "directories": {},
  "dist": {
    "shasum": "13f472450eb83bd6c6871a164c03eadb5e1a07ed",
    "integrity": "sha512-6+iaCMh/JXJaB2QWikqvGE9//wLEVYYwZd5sud8aLoLKog1Q75naZh2vlGVtg5Mq/NqpqGQvdIjJb3Bm+64AUQ==",
    "tarball": "https://registry.npmjs.org/@oclif/command/-/command-1.5.19.tgz",
    "fileCount": 17,
    "unpackedSize": 51878,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdcYv2CRA9TVsSAnZWagAAgeoP/0XJ5EcHDj3nHDAEsJp+\nUlNklvpRvgPrjjxmE56JFSdNpswdpJQXksj2G0mP3iLwXca5jznZUlDJQgvQ\njO8NeBHBH9ETWDfekTE1y47iPcAMC1zqA52NokCFSwoR5w5nlBiHV1dWynPC\nfOYb7xw8e2MiSs8W69oo0kEZ39XSn/XPxatobAkV5ADfDv/eJxriCEC+0dyH\nXsfKU6bh48gkoL3DoSpamTRVOb4lLbL7cJNNwollHc+ylr6vIOVMBgTfmHWH\ns77AcIXH4uwNiYgyY/r9CIkyygSMfFOEwADYEdJs5npK/a2ekUBIlAKGJszu\nGD1LL4bhrVapErKekmUBEnUzpPbwQP0JTkOSHKNNtwZohD0xM0bkEaQzKjJS\nOMCSydSLjjli4UzhThLE2aO1jGNIQL2AYhfDuKp8VDjZswuwf/NVp6RVVUPy\nqENkHqlaZ6zeEWwm0KV9I5WhbCdzNT6DmAEX6kBmK7logyc55hW91A2qlX5u\nCfmFHUXoMf1PdO8Q5nzv5gToMSZ2UCMVaQDWMK8vTCCyHujDx5A78eOuUESj\nyDi0EfMK5LWdiOESGU+SHOsTNOVAxKEpaHoa19VHtuZkjabxcHbd2RMIKgc4\nNbmIGCKMs8GlIG81JCD1BGRIQAEoMyaYulLXTyD8Bwn4CkYO8Z8neHKLx0Ne\nIKqf\r\n=GKE5\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=8.0.0"
  },
  "files": [
    "/flush.js",
    "/lib"
  ],
  "homepage": "https://github.com/oclif/command",
  "keywords": [
    "oclif"
  ],
  "license": "MIT",
  "licenseText": "MIT License\n\nCopyright (c) 2018 Salesforce.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "amphro",
      "email": "amphro@gmail.com"
    },
    {
      "name": "anycli-bot",
      "email": "jdxcode+anycli@gmail.com"
    },
    {
      "name": "dickeyxxx",
      "email": "npm@jdxcode.com"
    },
    {
      "name": "elbandito",
      "email": "longoria.public@gmail.com"
    },
    {
      "name": "nsamsami",
      "email": "nsamsami@salesforce.com"
    },
    {
      "name": "oclif-bot",
      "email": "jdxcode+oclif@gmail.com"
    },
    {
      "name": "rasphilco",
      "email": "philipe@heroku.com"
    },
    {
      "name": "rbergman",
      "email": "robert.bergman@gmail.com"
    }
  ],
  "name": "@oclif/command",
  "oclif": {
    "devPlugins": [
      "@oclif/plugin-help",
      "@oclif/plugin-plugins"
    ]
  },
  "optionalDependencies": {},
  "peerDependencies": {
    "@oclif/config": "^1",
    "@oclif/plugin-help": "^2"
  },
  "readme": "@oclif/command\n===============\n\noclif base command\n\n[![Version](https://img.shields.io/npm/v/@oclif/command.svg)](https://npmjs.org/package/@oclif/command)\n[![CircleCI](https://circleci.com/gh/oclif/command/tree/master.svg?style=shield)](https://circleci.com/gh/oclif/command/tree/master)\n[![Appveyor CI](https://ci.appveyor.com/api/projects/status/github/oclif/command?branch=master&svg=true)](https://ci.appveyor.com/project/heroku/command/branch/master)\n[![Codecov](https://codecov.io/gh/oclif/command/branch/master/graph/badge.svg)](https://codecov.io/gh/oclif/command)\n[![Known Vulnerabilities](https://snyk.io/test/npm/@oclif/command/badge.svg)](https://snyk.io/test/npm/@oclif/command)\n[![Downloads/week](https://img.shields.io/npm/dw/@oclif/command.svg)](https://npmjs.org/package/@oclif/command)\n[![License](https://img.shields.io/npm/l/@oclif/command.svg)](https://github.com/oclif/command/blob/master/package.json)\n\nThis is about half of the main codebase for oclif. The other half lives in [@oclif/config](https://github.com/oclif/config). This can be used directly, but it probably makes more sense to build your CLI with the [generator](https://github.com/oclif/oclif).\n\nUsage\n=====\n\nWithout the generator, you can create a simple CLI like this:\n\n**TypeScript**\n```js\n#!/usr/bin/env ts-node\n\nimport * as fs from 'fs'\nimport {Command, flags} from '@oclif/command'\n\nclass LS extends Command {\n  static flags = {\n    version: flags.version(),\n    help: flags.help(),\n    // run with --dir= or -d=\n    dir: flags.string({\n      char: 'd',\n      default: process.cwd(),\n    }),\n  }\n\n  async run() {\n    const {flags} = this.parse(LS)\n    let files = fs.readdirSync(flags.dir)\n    for (let f of files) {\n      this.log(f)\n    }\n  }\n}\n\nLS.run()\n.catch(require('@oclif/errors/handle'))\n```\n\n**JavaScript**\n```js\n#!/usr/bin/env node\n\nconst fs = require('fs')\nconst {Command, flags} = require('@oclif/command')\n\nclass LS extends Command {\n  async run() {\n    const {flags} = this.parse(LS)\n    let files = fs.readdirSync(flags.dir)\n    for (let f of files) {\n      this.log(f)\n    }\n  }\n}\n\nLS.flags = {\n  version: flags.version(),\n  help: flags.help(),\n  // run with --dir= or -d=\n  dir: flags.string({\n    char: 'd',\n    default: process.cwd(),\n  }),\n}\n\nLS.run()\n.catch(require('@oclif/errors/handle'))\n```\n\nThen run either of these with:\n\n```sh-session\n$ ./myscript\n...files in current dir...\n$ ./myscript --dir foobar\n...files in ./foobar...\n$ ./myscript --version\nmyscript/0.0.0 darwin-x64 node-v9.5.0\n$ ./myscript --help\nUSAGE\n  $ @oclif/command\n\nOPTIONS\n  -d, --dir=dir  [default: /Users/jdickey/src/github.com/oclif/command]\n  --help         show CLI help\n  --version      show CLI version\n```\n\nSee the [generator](https://github.com/oclif/oclif) for all the options you can pass to the command.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/oclif/command.git"
  },
  "scripts": {
    "build": "rm -rf lib && tsc",
    "lint": "tsc -p test --noEmit && tslint -p test -t stylish",
    "posttest": "yarn run lint",
    "prepublishOnly": "yarn run build",
    "test": "mocha --forbid-only \"test/**/*.test.ts\"",
    "version": "conventional-changelog -p angular -i CHANGELOG.md -s -r 0 && git add CHANGELOG.md"
  },
  "types": "lib/index.d.ts",
  "version": "1.5.19"
}
